import React, { useState } from 'react';
import {
    View,
    Text,
    Image,
    StyleSheet,
    TouchableOpacity,
    Dimensions,
} from 'react-native';

const slides = [
    {
        key: '1',
        title: 'N·ªÄN T·∫¢NG GI√ÅO D·ª§C B·∫∞NG C√îNG NGH·ªÜ',
        topImage: require('../../assets/logo1.png'),
        bottomImage: require('../../assets/book.png'),
    },
    {
        key: '2',
        title: 'üöÄ T√¨m Gia S∆∞ ‚Äì H·ªçc D·ªÖ D√†ng  Ti·∫øn B·ªô Nhanh!',
        image: require('../../assets/teacher.png'),
        description:
            '·ª®ng d·ª•ng gi√∫p h·ªçc vi√™n t√¨m ki·∫øm gia s∆∞ ph√π h·ª£p nhanh ch√≥ng, k·∫øt n·ªëi tr·ª±c ti·∫øp v·ªõi gi√°o vi√™n gi·ªèi, h·ªó tr·ª£ h·ªçc t·∫≠p m·ªçi l√∫c, m·ªçi n∆°i. D·ªÖ d√†ng ƒë·∫∑t l·ªãch v√† theo d√µi ti·∫øn tr√¨nh h·ªçc t·∫≠p hi·ªáu qu·∫£.',
    },
    {
        key: '3',
        title: 'üöÄ K·∫øt N·ªëi Gia S∆∞ Th√¥ng Minh V·ªõi AI T√≠ch H·ª£p!',
        image: require('../../assets/ai.png'),
        description:
            '·ª®ng d·ª•ng ti√™n phong trong vi·ªác k·∫øt n·ªëi h·ªçc vi√™n v·ªõi gia s∆∞ th√¥ng qua AI th√¥ng minh, gi√∫p b·∫°n t√¨m ki·∫øm gia s∆∞ ph√π h·ª£p nhanh ch√≥ng, ch√≠nh x√°c, d·ª±a tr√™n tr√¨nh ƒë·ªô, nhu c·∫ßu v√† l·ªãch h·ªçc c√° nh√¢n.',
    },
    {
        key: '4',
        title: 'N·ªÄN T·∫¢NG GI√ÅO D·ª§C B·∫∞NG C√îNG NGH·ªÜ',
        topImage: require('../../assets/logo1.png'),
        image: require('../../assets/role.png'),
        isFinal: true,
    },
];

const OnboardingScreen = ({ navigation }) => {
    const [index, setIndex] = useState(0);
    const slide = slides[index];

    const nextSlide = () => {
        if (index < slides.length - 1) {
            setIndex(index + 1);
        }
    };

    const goToRoleScreen = (role) => {
        if (role === 'Gia s∆∞') {
            navigation.navigate('TutorRegister');
        } else {
            // Chuy·ªÉn sang m√†n h√¨nh kh√°c n·∫øu c·∫ßn
            alert('B·∫°n ch·ªçn Ph·ª• huynh / H·ªçc vi√™n');
        }
    };

    return (
        <View style={styles.container}>
            {slide.isFinal ? (
                <>
                    <Image source={slide.topImage} style={styles.finalLogo} />
                    <Text style={styles.finalTitle}>{slide.title}</Text>
                    <Image source={slide.image} style={styles.finalImage} />

                    <View style={styles.roleContainer}>
                        <TouchableOpacity
                            style={styles.roleButton}
                            onPress={() => goToRoleScreen('Gia s∆∞')}
                        >
                            <Text style={styles.roleText}>üë®‚Äçüè´ Gia S∆∞</Text>
                        </TouchableOpacity>
                        <TouchableOpacity
                            style={styles.roleButton}
                            onPress={() => goToRoleScreen('Ph·ª• huynh / H·ªçc vi√™n')}
                        >
                            <Text style={styles.roleText}>üßí Ph·ª• Huynh / H·ªçc Vi√™n</Text>
                        </TouchableOpacity>
                    </View>
                </>
            ) : slide.key === '1' ? (
                <>
                    <Image source={slide.topImage} style={styles.topImage} />
                    <Text style={styles.title}>{slide.title}</Text>
                    <Image source={slide.bottomImage} style={styles.bottomImage} />
                </>
            ) : (
                <>
                    <Text style={styles.title}>{slide.title}</Text>
                    <Text style={styles.desc}>{slide.description}</Text>
                    <Image source={slide.image} style={styles.image} />
                </>
            )}

            {!slide.isFinal && (
                <TouchableOpacity style={styles.button} onPress={nextSlide}>
                    <Text style={styles.buttonText}>
                        {index === slides.length - 2 ? 'B·∫Øt ƒë·∫ßu' : 'Ti·∫øp t·ª•c'}
                    </Text>
                </TouchableOpacity>
            )}
        </View>
    );
};

const { width } = Dimensions.get('window');

const styles = StyleSheet.create({
    container: {
        flex: 1,
        paddingTop: 60,
        alignItems: 'center',
        justifyContent: 'space-between',
        backgroundColor: '#fff',
    },
    topImage: {
        width: width * 0.75,
        height: 170,
        resizeMode: 'contain',
        marginTop: 40,
        marginBottom: 2,
    },
    bottomImage: {
        width: width * 0.95,
        height: 300,
        resizeMode: 'contain',
        marginTop: 0,
    },
    image: {
        width: width * 0.95,
        height: 400,
        resizeMode: 'contain',
        marginBottom: 30,
    },
    finalLogo: {
        width: width * 0.3,
        height: 150,
        resizeMode: 'contain',
        marginTop: 40,
        marginBottom: 0,
    },
    finalTitle: {
        fontSize: 30,
        fontWeight: 'bold',
        textAlign: 'center',
        color: '#333',
        marginBottom: 16,
    },
    finalImage: {
        width: width * 0.9,
        height: 260,
        resizeMode: 'contain',
        marginBottom: 20,
    },
    title: {
        fontSize: 30,
        fontWeight: 'bold',
        textAlign: 'center',
        marginTop: 20,
        marginBottom: 12,
        color: '#000',
    },
    desc: {
        fontSize: 20,
        fontWeight: '400',
        textAlign: 'left',
        paddingHorizontal: 24,
        color: '#333',
        marginBottom: 10,
        lineHeight: 22,
    },
    button: {
        backgroundColor: '#31B7EC',
        paddingVertical: 16,
        paddingHorizontal: 50,
        borderRadius: 30,
        marginBottom: 40,
    },
    buttonText: {
        color: '#fff',
        fontSize: 20,
        fontWeight: 'bold',
    },
    roleContainer: {
        marginBottom: 30,
        width: '100%',
        alignItems: 'center',
    },
    roleButton: {
        borderWidth: 1.8,
        borderColor: '#31B7EC',
        paddingVertical: 14,
        paddingHorizontal: 25,
        borderRadius: 30,
        marginVertical: 10,
        width: '80%',
        alignItems: 'center',
        backgroundColor: '#fff',
    },
    roleText: {
        fontSize: 25,
        fontWeight: 'bold',
        color: '#31B7EC',
    },
});

export default OnboardingScreen;
